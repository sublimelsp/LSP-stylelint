{
	"command": ["${node_bin}", "${server_path}", "--stdio"],
	"settings": {
		// Control whether stylelint is enabled for CSS/SCSS/Less files or not.
		"stylelint.enable": true,
		// Options for the disable lint rule action in the quick fix menu.
		"stylelint.codeAction.disableRuleComment": {
			"location": "separateLine"
		},
		// A stylelint configuration object.
		"stylelint.config": null,
		// Path to a JSON, YAML, or JS file that contains your configuration object. Use this option if you don't want stylelint to search for a configuration file.
		"stylelint.configFile": "",
		// A partial stylelint config whose properties override the existing ones.
		"stylelint.configOverrides": null,
		// A path to the directory that relative paths defining "extends" and "plugins" are relative to.
		"stylelint.configBasedir": "",
		// An absolute path to a custom PostCSS-compatible syntax module.
		"stylelint.customSyntax": "",
		// Ignore `styleline-disable` (e.g. `/* stylelint-disable block-no-empty */`) comments.
		"stylelint.ignoreDisables": false,
		// The package manager you use to install node modules. Possible values: npm, yarn, pnpm.
		"stylelint.packageManager": "npm",
		// Also report errors for `stylelint-disable` comments that are used for rules
		// that don't exist within the configuration object.
		"stylelint.reportInvalidScopeDisables": false,
		// Also report errors for `stylelint-disable` comments that are not blocking a lint warning.
		"stylelint.reportNeedlessDisables": false,
		// An array of language IDs which snippets are provided for by stylelint.
		"stylelint.snippet": [
			"css",
			"less",
			"postcss",
		],
		// Supply a custom path to the stylelint module.
		"stylelint.stylelintPath": "",
		// Specify a syntax. Only use this option if you want to force a specific syntax.
		// Possible values: css, css-in-js, html, less, markdown, sass, scss, sugarss.
		"stylelint.syntax": "",
		// An array of language IDs which should be validated by stylelint.
		"stylelint.validate": [
			"css",
			"less",
			"postcss",
		],
	},
	// ST4
	"selector": "source.css | source.scss | source.less | text.html.vue",
	// ST3
	"languages": [
		{
			"languageId": "scss",
			"scopes": ["source.scss"],
			"syntaxes": ["Packages/Sass/Syntaxes/SCSS.sublime-syntax", "Packages/SCSS/SCSS.tmLanguage"],
		},
		{
			"languageId": "less",
			"scopes": ["source.less"],
			"syntaxes": ["Packages/LESS/Syntaxes/LESS.sublime-syntax"],
		},
		{
			"languageId": "css",
			"scopes": ["source.css"],
			"syntaxes": ["Packages/CSS/CSS.sublime-syntax"],
		},
		{
			"languageId": "vue",
			"scopes": ["text.html.vue"],
			"syntaxes": ["Packages/Vue Syntax Highlight/Vue Component.sublime-syntax"],
		},
	],
}
